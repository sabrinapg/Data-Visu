ggplot(data = mpg)
ggplot(data = mpg) + #
mpg
mpg
ggplot(data = mpg)
?mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = class, y = drv))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = trans))
ggplot(data = mpg) + geom_point(mapping = aes(x = class, y = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), color = "blue")
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ .)
?mpg
?mpg
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ .)
?mpg
??mpg
?mpg
mpb
ggplot(data = mpg)
mpg
?mpg
?mpg
ggplot(data=mpg)
?mpg
??mpg
tidyverse::tidyverse_conflicts()
ggplot(data = mpg)
library("tidyverse")
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(. ~ cyl)
ggplot(data = mpg) +
+     geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) + facet_grid(. ~ cyl)
ggplot(data = mpg, mapping = aes(x = displ, y = hwy, color = drv)) + geom_point() +
geom_smooth(se = FALSE)
library "tidyverse"
libray(tidyverse)
library(tidyverse)
diamons
diamonds
ggplot(data=diamonds)
ggplots(data = diamonds)
ggplot(data = diamonds)
ggplot(data)
ggplot(data = diamonds) + geom_point(mapping = aes(x=price, y=carat))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) + geom_point(mapping = aes(x=price, y=carat))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, y = stat(prop), group = 1))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color), position = "dodge")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), position = "jitter")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot()
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
library(rmarkdown)
ggplot(data = diamonds) +
+     geom_bar(mapping = aes(x = cut, fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color), position = "dodge")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
{r}
```{r}
5/20
sin (pi/2)
data$price <- data$price/2
x
x = -7
y = -10
z = x + y
x = 7*3
y "Berlin"
Y = "Berlin"
library(tidyverse)
data$price
5/20
sin (pi/2)
# Object can take on three different meanings
# 1 Vector of either numbers of letters (anything that is not numbers must be in "")
x <- 7
x
y <- 10
z <- x + y
z
x <- 7*3
z
y <- "Berlin"
y
# 2. Data frame
data <- diamonds
library(tidyverse)
mpg <- mpg
data$price <- data$price/2
diamonds$price <- diamonds$price/2
# 3. Element in a data frame such as variable
data <- diamonds
data$price2 <- data$price/2 # good practice: for each computation generate a new variable
data$price/2
geom_boxplot()
Y
>ggplot(data = mpg) +
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
mpg
?mpg
library(tidyverse)
mpg
y "berlin"
but_zou_zou
geom_boxplot
sin(pi/2)
ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
geom_boxplot() +
coord_flip()
library(tidyverse)
this_is_a_long_name <- 5 # quite long
this_is_a_long_name
geom_boxplot() # TAB also works for functions
this_is_a_long_name <- 5 # quite long
this_is_a_long_name
geom_boxplot() # TAB also works for functions
x <- 7
x
y <- 10
z <- x + y
x <- 7*3
y <- "Berlin"
data <- diamonds
data$price <- data$price/2
library(tidyverse)
otherPeopleUseCamelCase
geom_boxplot: outlier.colour = NULL, outlier.fill = NULL, outlier.shape = 19, outlier.size = 1.5, outlier.stroke = 0.5, outlier.alpha = NULL, notch = FALSE, notchwidth = 0.5, varwidth = FALSE, na.rm = FALSE, orientation = NA
r_rocks
r_rocks <- 3^7
r_rocks
R_rocks
geom_boxplot()
df <- data.frame(
gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30)
)
df <- data.frame(
gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30)
)
ds <- do.call(rbind, lapply(split(df, df$gp), function(d) {
data.frame(mean = mean(d$y), sd = sd(d$y), gp = d$gp)
}))
# The summary data frame ds is used to plot larger red points on top
# of the raw data. Note that we don't need to supply `data` or `mapping`
# in each layer because the defaults from ggplot() are used.
ggplot(df, aes(gp, y)) +
geom_point() +
geom_point(data = ds, aes(y = mean), colour = 'red', size = 3)
df <- data.frame(
gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30)
)
ds <- do.call(rbind, lapply(split(df, df$gp), function(d) {
data.frame(mean = mean(d$y), sd = sd(d$y), gp = d$gp)
}))
df <- data.frame(
gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30)
)
ds <- do.call(rbind, lapply(split(df, df$gp), function(d) {
data.frame(mean = mean(d$y), sd = sd(d$y), gp = d$gp)
}))
ggplot(df, aes(gp, y)) +
geom_point() +
geom_point(data = ds, aes(y = mean), colour = 'red', size = 3)
library(tidyverse)
mpg?
?mpg
library(gapminder)
library(tidyverse)
ggplot(data = diamons, mapping = aes(x = carat, y = price)) + geom_point()
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) + geom_point()
ggsave("diamonds.pdf")
write_csv(diamonds, "diamonds.csv")
ggplot(data = diamonds) +
geom_point(mapping = aes (x = carat, y = price))
ggplot(data = diamonds, mapping = aes(x = carat, y = price)) +
geom_point()
ggplot(data = diamonds) +
geom_point(mapping = aes (x = carat, y = price))
library(nycflights13)
install.packages(nycflights13)
mpg?
?mpg
?mpg
library(tidyverse)
?mpg
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = price, y = carat))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = price, y = carat))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color))
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = color), position = "fill")
source("~/intro-to-programming/scripts/hello_world.R")
print("Hello World!")
source("~/intro-to-programming/scripts/hello_world.R")
print("This is Sabrina's laptop")
source("~/intro-to-programming/scripts/hello_world.R")
print("This is Sabrina's laptop")
source("~/intro-to-programming/scripts/hello_world.R")
print("Somebody is in the room")
source("~/intro-to-programming/scripts/hello_world.R")
source("~/.active-rstudio-document")
print("Eleonora has a macbook")
source("~/.active-rstudio-document")
source("~/intro-to-programming/scripts/hello_world_Eleonora.R")
print(Hi babies)
print("Hi babies")
hello_world <- c("hello","world")
c("hello","world")
hello_world <- c("hello","world")
source("~/intro-to-programming/scripts/variable_assignment.R")
hello_world <- c("hello","world")
c("hello","world")
sabrina_susu <- c("sabrina","susu")
sabrina <- c("apple")
sabrina_susu
sabrina_susu <- c("sabrina", "banana")
hello_world
Eleonora <- c("hello", "Elenora")
Sabrina <- c("babe", "Sabrina")
age <- 21
name <- c("Sabrina")
print(name, age)
source("~/intro-to-programming/scripts/variable_assignment.R")
name <- c("Eleonora")
age <- 20
age <- 20
c("my name is", name,"and my age is:", age)
c("my name is", name ,"and my age is:", age)
susu <- c("milk")
print("susu")
print(susu)
print(name)
print(age, Eleonora, hello_world)
print(age, name)
print(name)
c("name")
print(c("My name is:", name, "and my age is:", age))
source("~/intro-to-programming/scripts/variable_assignment.R")
print(c("My name is:", name, "and my age is:", age))
print(name)
print(age)
print("name", "age")
c("name", "age")
c(name, age)
Biru <- c("blue")
c("biru")
c(biru)
print(Biru)
c(Biru)
c(sabrina, Sabrina)
print("Hello Girls")
print("honey")
library(ggplot2)
library(ggplot2)
library(ggplot2)
install.packages("ggpplot2")
install.packages("ggpplot2")
library(ggplot2)
library(ggplot2)
library(tidyverse)
library(ggplot2)
source("~/intro-to-programming/scripts/hello_world.R")
source("~/intro-to-programming/scripts/variable_assignment.R")
c(sabrina, Sabrina)
c(Biru)
Biru <- c("blue")
print(Biru)
c(sabrina, Sabrina)
source("~/intro-to-programming/scripts/class_one.R")
source("~/intro-to-programming/scripts/class_one.R")
heart_attack_data <- read.csv("../data/heart_attack_data.csv", header=TRUE)
heart_data <- read.csv(--/data(heart_data))
View(heart)
View(heart_data)
heart_attack_data
heart_attack_data <- read.csv("../data/heart_attack_data.csv", header=TRUE)
heart_attack_data <- read.csv("../data/heart_attack_data.csv", header=TRUE)
head(heart_attack_data)
dim(heart_attack_data)
heart_attack_data <- read.csv("../data/heart_attack_data.csv", header=TRUE)
setwd("~/intro-to-programming/scripts")
heart_attack_data <- read.csv("../data/heart_attack_data.csv", header=TRUE)
heart_attack_data <- read.csv("../data/heart_attack_data.csv", header=TRUE)
View(heart_attack_data)
Shape(heart_attack_data)
dim(heart_attack_data)
head(heart_attack_data)
class(heart_attack_data)
dim(heart_attack_data)
str(heart_attack_data)
